/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Jimmy Vargas' at '6/12/15 6:15 PM' with Gradle 2.4
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:1.2'
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'

//handling the download drivers
apply plugin: 'de.undercouch.download'




// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'
	compile 'org.seleniumhq.selenium:selenium-java:2.53.1'
    compile 'com.force.api:force-metadata-api:35.0.0'
    compile 'com.force.api:force-partner-api:35.0.0'
    compile 'com.force.api:force-wsc:35.0.0'
    compile 'com.force.api:force-apex-api:35.0.0'
    compile 'org.testng:testng:6.9.10'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.5.4'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.4'
    compile 'com.github.detro:phantomjsdriver:1.2.0'
	compile 'org.uncommons:reportng:1.1.4'
    compile 'com.google.inject:guice:3.0'
    compile 'log4j:log4j:1.2.17'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'org.testng:testng:6.8.1'
	
}

task runTestNGTestCases(type: Test) {
    ignoreFailures = true
    useTestNG()

    testLogging {
        events "started", "passed", "failed", "skipped"
    }

    options {
        suites(suites)
        includeGroups(groups)
        excludeGroups(excludeGroup)
        listeners << 'org.uncommons.reportng.HTMLReporter'
        listeners << 'org.uncommons.reportng.JUnitXMLReporter'
    }

    systemProperties.put('primaryUserName', primaryUserName)
    systemProperties.put('primaryUserPassword', primaryUserPassword)
    systemProperties.put('browser', browser)
    systemProperties.put('mode',mode)
    systemProperties.put('groups',groups)
    systemProperties.put('primaryUsePasswordToken',primaryUsePasswordToken)
    systemProperties.put('excludeGroup',excludeGroup)


    task downloadDrivers(type: Copy) {
        File drivers = new File('./drivers')
        drivers.mkdirs()

        if(browser == "Chrome") {
            download {
                src 'http://chromedriver.storage.googleapis.com/2.15/chromedriver_win32.zip'
                dest drivers
                onlyIfNewer true
            }
        }
        else if(browser == "IE") {

            download {
                src 'http://selenium.googlecode.com/files/IEDriverServer_x64_2.28.0.zip'
                dest drivers
                onlyIfNewer true
            }
        }

        file(drivers).listFiles().each {
            artifact ->
                if (artifact.name.endsWith('.zip')) {
                    from zipTree(artifact)
                    into drivers
                }
        }
    }

    if(browser!="Firefox"){
        downloadDrivers.execute()
    }

}